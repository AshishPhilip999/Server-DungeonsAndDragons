// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Color.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from Color.proto</summary>
public static partial class ColorReflection {

  #region Descriptor
  /// <summary>File descriptor for Color.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static ColorReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "CgtDb2xvci5wcm90byJACgVDb2xvchILCgNyZWQYASABKAUSDQoFZ3JlZW4Y",
          "AiABKAUSDAoEYmx1ZRgDIAEoBRINCgVhbHBoYRgEIAEoBWIGcHJvdG8z"));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::Color), global::Color.Parser, new[]{ "Red", "Green", "Blue", "Alpha" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class Color : pb::IMessage<Color>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<Color> _parser = new pb::MessageParser<Color>(() => new Color());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<Color> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ColorReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public Color() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public Color(Color other) : this() {
    red_ = other.red_;
    green_ = other.green_;
    blue_ = other.blue_;
    alpha_ = other.alpha_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public Color Clone() {
    return new Color(this);
  }

  /// <summary>Field number for the "red" field.</summary>
  public const int RedFieldNumber = 1;
  private int red_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Red {
    get { return red_; }
    set {
      red_ = value;
    }
  }

  /// <summary>Field number for the "green" field.</summary>
  public const int GreenFieldNumber = 2;
  private int green_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Green {
    get { return green_; }
    set {
      green_ = value;
    }
  }

  /// <summary>Field number for the "blue" field.</summary>
  public const int BlueFieldNumber = 3;
  private int blue_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Blue {
    get { return blue_; }
    set {
      blue_ = value;
    }
  }

  /// <summary>Field number for the "alpha" field.</summary>
  public const int AlphaFieldNumber = 4;
  private int alpha_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Alpha {
    get { return alpha_; }
    set {
      alpha_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as Color);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(Color other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Red != other.Red) return false;
    if (Green != other.Green) return false;
    if (Blue != other.Blue) return false;
    if (Alpha != other.Alpha) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (Red != 0) hash ^= Red.GetHashCode();
    if (Green != 0) hash ^= Green.GetHashCode();
    if (Blue != 0) hash ^= Blue.GetHashCode();
    if (Alpha != 0) hash ^= Alpha.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Red != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Red);
    }
    if (Green != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Green);
    }
    if (Blue != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(Blue);
    }
    if (Alpha != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(Alpha);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Red != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Red);
    }
    if (Green != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Green);
    }
    if (Blue != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(Blue);
    }
    if (Alpha != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(Alpha);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (Red != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Red);
    }
    if (Green != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Green);
    }
    if (Blue != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Blue);
    }
    if (Alpha != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Alpha);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(Color other) {
    if (other == null) {
      return;
    }
    if (other.Red != 0) {
      Red = other.Red;
    }
    if (other.Green != 0) {
      Green = other.Green;
    }
    if (other.Blue != 0) {
      Blue = other.Blue;
    }
    if (other.Alpha != 0) {
      Alpha = other.Alpha;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Red = input.ReadInt32();
          break;
        }
        case 16: {
          Green = input.ReadInt32();
          break;
        }
        case 24: {
          Blue = input.ReadInt32();
          break;
        }
        case 32: {
          Alpha = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Red = input.ReadInt32();
          break;
        }
        case 16: {
          Green = input.ReadInt32();
          break;
        }
        case 24: {
          Blue = input.ReadInt32();
          break;
        }
        case 32: {
          Alpha = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

#endregion


#endregion Designer generated code
