// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Player.proto

package DnD.Player;

public final class PlayerOuterClass {
  private PlayerOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface PlayerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:DnD.Player.Player)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>float posX = 1;</code>
     * @return The posX.
     */
    float getPosX();

    /**
     * <code>float posY = 2;</code>
     * @return The posY.
     */
    float getPosY();

    /**
     * <code>int32 viewDistance = 3;</code>
     * @return The viewDistance.
     */
    int getViewDistance();

    /**
     * <code>float currentTerrainPosX = 4;</code>
     * @return The currentTerrainPosX.
     */
    float getCurrentTerrainPosX();

    /**
     * <code>float currentTerrainPosY = 5;</code>
     * @return The currentTerrainPosY.
     */
    float getCurrentTerrainPosY();

    /**
     * <code>repeated .Dnd.Terrain.Terrain terrainData = 6;</code>
     */
    java.util.List<DnD.Terrain.TerrainOuterClass.Terrain> 
        getTerrainDataList();
    /**
     * <code>repeated .Dnd.Terrain.Terrain terrainData = 6;</code>
     */
    DnD.Terrain.TerrainOuterClass.Terrain getTerrainData(int index);
    /**
     * <code>repeated .Dnd.Terrain.Terrain terrainData = 6;</code>
     */
    int getTerrainDataCount();
    /**
     * <code>repeated .Dnd.Terrain.Terrain terrainData = 6;</code>
     */
    java.util.List<? extends DnD.Terrain.TerrainOuterClass.TerrainOrBuilder> 
        getTerrainDataOrBuilderList();
    /**
     * <code>repeated .Dnd.Terrain.Terrain terrainData = 6;</code>
     */
    DnD.Terrain.TerrainOuterClass.TerrainOrBuilder getTerrainDataOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code DnD.Player.Player}
   */
  public  static final class Player extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:DnD.Player.Player)
      PlayerOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Player.newBuilder() to construct.
    private Player(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Player() {
      terrainData_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Player();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Player(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 13: {

              posX_ = input.readFloat();
              break;
            }
            case 21: {

              posY_ = input.readFloat();
              break;
            }
            case 24: {

              viewDistance_ = input.readInt32();
              break;
            }
            case 37: {

              currentTerrainPosX_ = input.readFloat();
              break;
            }
            case 45: {

              currentTerrainPosY_ = input.readFloat();
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                terrainData_ = new java.util.ArrayList<DnD.Terrain.TerrainOuterClass.Terrain>();
                mutable_bitField0_ |= 0x00000001;
              }
              terrainData_.add(
                  input.readMessage(DnD.Terrain.TerrainOuterClass.Terrain.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          terrainData_ = java.util.Collections.unmodifiableList(terrainData_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return DnD.Player.PlayerOuterClass.internal_static_DnD_Player_Player_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return DnD.Player.PlayerOuterClass.internal_static_DnD_Player_Player_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              DnD.Player.PlayerOuterClass.Player.class, DnD.Player.PlayerOuterClass.Player.Builder.class);
    }

    public static final int POSX_FIELD_NUMBER = 1;
    private float posX_;
    /**
     * <code>float posX = 1;</code>
     * @return The posX.
     */
    public float getPosX() {
      return posX_;
    }

    public static final int POSY_FIELD_NUMBER = 2;
    private float posY_;
    /**
     * <code>float posY = 2;</code>
     * @return The posY.
     */
    public float getPosY() {
      return posY_;
    }

    public static final int VIEWDISTANCE_FIELD_NUMBER = 3;
    private int viewDistance_;
    /**
     * <code>int32 viewDistance = 3;</code>
     * @return The viewDistance.
     */
    public int getViewDistance() {
      return viewDistance_;
    }

    public static final int CURRENTTERRAINPOSX_FIELD_NUMBER = 4;
    private float currentTerrainPosX_;
    /**
     * <code>float currentTerrainPosX = 4;</code>
     * @return The currentTerrainPosX.
     */
    public float getCurrentTerrainPosX() {
      return currentTerrainPosX_;
    }

    public static final int CURRENTTERRAINPOSY_FIELD_NUMBER = 5;
    private float currentTerrainPosY_;
    /**
     * <code>float currentTerrainPosY = 5;</code>
     * @return The currentTerrainPosY.
     */
    public float getCurrentTerrainPosY() {
      return currentTerrainPosY_;
    }

    public static final int TERRAINDATA_FIELD_NUMBER = 6;
    private java.util.List<DnD.Terrain.TerrainOuterClass.Terrain> terrainData_;
    /**
     * <code>repeated .Dnd.Terrain.Terrain terrainData = 6;</code>
     */
    public java.util.List<DnD.Terrain.TerrainOuterClass.Terrain> getTerrainDataList() {
      return terrainData_;
    }
    /**
     * <code>repeated .Dnd.Terrain.Terrain terrainData = 6;</code>
     */
    public java.util.List<? extends DnD.Terrain.TerrainOuterClass.TerrainOrBuilder> 
        getTerrainDataOrBuilderList() {
      return terrainData_;
    }
    /**
     * <code>repeated .Dnd.Terrain.Terrain terrainData = 6;</code>
     */
    public int getTerrainDataCount() {
      return terrainData_.size();
    }
    /**
     * <code>repeated .Dnd.Terrain.Terrain terrainData = 6;</code>
     */
    public DnD.Terrain.TerrainOuterClass.Terrain getTerrainData(int index) {
      return terrainData_.get(index);
    }
    /**
     * <code>repeated .Dnd.Terrain.Terrain terrainData = 6;</code>
     */
    public DnD.Terrain.TerrainOuterClass.TerrainOrBuilder getTerrainDataOrBuilder(
        int index) {
      return terrainData_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (posX_ != 0F) {
        output.writeFloat(1, posX_);
      }
      if (posY_ != 0F) {
        output.writeFloat(2, posY_);
      }
      if (viewDistance_ != 0) {
        output.writeInt32(3, viewDistance_);
      }
      if (currentTerrainPosX_ != 0F) {
        output.writeFloat(4, currentTerrainPosX_);
      }
      if (currentTerrainPosY_ != 0F) {
        output.writeFloat(5, currentTerrainPosY_);
      }
      for (int i = 0; i < terrainData_.size(); i++) {
        output.writeMessage(6, terrainData_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (posX_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, posX_);
      }
      if (posY_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, posY_);
      }
      if (viewDistance_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, viewDistance_);
      }
      if (currentTerrainPosX_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, currentTerrainPosX_);
      }
      if (currentTerrainPosY_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, currentTerrainPosY_);
      }
      for (int i = 0; i < terrainData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, terrainData_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof DnD.Player.PlayerOuterClass.Player)) {
        return super.equals(obj);
      }
      DnD.Player.PlayerOuterClass.Player other = (DnD.Player.PlayerOuterClass.Player) obj;

      if (java.lang.Float.floatToIntBits(getPosX())
          != java.lang.Float.floatToIntBits(
              other.getPosX())) return false;
      if (java.lang.Float.floatToIntBits(getPosY())
          != java.lang.Float.floatToIntBits(
              other.getPosY())) return false;
      if (getViewDistance()
          != other.getViewDistance()) return false;
      if (java.lang.Float.floatToIntBits(getCurrentTerrainPosX())
          != java.lang.Float.floatToIntBits(
              other.getCurrentTerrainPosX())) return false;
      if (java.lang.Float.floatToIntBits(getCurrentTerrainPosY())
          != java.lang.Float.floatToIntBits(
              other.getCurrentTerrainPosY())) return false;
      if (!getTerrainDataList()
          .equals(other.getTerrainDataList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + POSX_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getPosX());
      hash = (37 * hash) + POSY_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getPosY());
      hash = (37 * hash) + VIEWDISTANCE_FIELD_NUMBER;
      hash = (53 * hash) + getViewDistance();
      hash = (37 * hash) + CURRENTTERRAINPOSX_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getCurrentTerrainPosX());
      hash = (37 * hash) + CURRENTTERRAINPOSY_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getCurrentTerrainPosY());
      if (getTerrainDataCount() > 0) {
        hash = (37 * hash) + TERRAINDATA_FIELD_NUMBER;
        hash = (53 * hash) + getTerrainDataList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static DnD.Player.PlayerOuterClass.Player parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static DnD.Player.PlayerOuterClass.Player parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static DnD.Player.PlayerOuterClass.Player parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static DnD.Player.PlayerOuterClass.Player parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static DnD.Player.PlayerOuterClass.Player parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static DnD.Player.PlayerOuterClass.Player parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static DnD.Player.PlayerOuterClass.Player parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static DnD.Player.PlayerOuterClass.Player parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static DnD.Player.PlayerOuterClass.Player parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static DnD.Player.PlayerOuterClass.Player parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static DnD.Player.PlayerOuterClass.Player parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static DnD.Player.PlayerOuterClass.Player parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(DnD.Player.PlayerOuterClass.Player prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code DnD.Player.Player}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:DnD.Player.Player)
        DnD.Player.PlayerOuterClass.PlayerOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DnD.Player.PlayerOuterClass.internal_static_DnD_Player_Player_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DnD.Player.PlayerOuterClass.internal_static_DnD_Player_Player_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                DnD.Player.PlayerOuterClass.Player.class, DnD.Player.PlayerOuterClass.Player.Builder.class);
      }

      // Construct using DnD.Player.PlayerOuterClass.Player.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getTerrainDataFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        posX_ = 0F;

        posY_ = 0F;

        viewDistance_ = 0;

        currentTerrainPosX_ = 0F;

        currentTerrainPosY_ = 0F;

        if (terrainDataBuilder_ == null) {
          terrainData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          terrainDataBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return DnD.Player.PlayerOuterClass.internal_static_DnD_Player_Player_descriptor;
      }

      @java.lang.Override
      public DnD.Player.PlayerOuterClass.Player getDefaultInstanceForType() {
        return DnD.Player.PlayerOuterClass.Player.getDefaultInstance();
      }

      @java.lang.Override
      public DnD.Player.PlayerOuterClass.Player build() {
        DnD.Player.PlayerOuterClass.Player result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public DnD.Player.PlayerOuterClass.Player buildPartial() {
        DnD.Player.PlayerOuterClass.Player result = new DnD.Player.PlayerOuterClass.Player(this);
        int from_bitField0_ = bitField0_;
        result.posX_ = posX_;
        result.posY_ = posY_;
        result.viewDistance_ = viewDistance_;
        result.currentTerrainPosX_ = currentTerrainPosX_;
        result.currentTerrainPosY_ = currentTerrainPosY_;
        if (terrainDataBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            terrainData_ = java.util.Collections.unmodifiableList(terrainData_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.terrainData_ = terrainData_;
        } else {
          result.terrainData_ = terrainDataBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof DnD.Player.PlayerOuterClass.Player) {
          return mergeFrom((DnD.Player.PlayerOuterClass.Player)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(DnD.Player.PlayerOuterClass.Player other) {
        if (other == DnD.Player.PlayerOuterClass.Player.getDefaultInstance()) return this;
        if (other.getPosX() != 0F) {
          setPosX(other.getPosX());
        }
        if (other.getPosY() != 0F) {
          setPosY(other.getPosY());
        }
        if (other.getViewDistance() != 0) {
          setViewDistance(other.getViewDistance());
        }
        if (other.getCurrentTerrainPosX() != 0F) {
          setCurrentTerrainPosX(other.getCurrentTerrainPosX());
        }
        if (other.getCurrentTerrainPosY() != 0F) {
          setCurrentTerrainPosY(other.getCurrentTerrainPosY());
        }
        if (terrainDataBuilder_ == null) {
          if (!other.terrainData_.isEmpty()) {
            if (terrainData_.isEmpty()) {
              terrainData_ = other.terrainData_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureTerrainDataIsMutable();
              terrainData_.addAll(other.terrainData_);
            }
            onChanged();
          }
        } else {
          if (!other.terrainData_.isEmpty()) {
            if (terrainDataBuilder_.isEmpty()) {
              terrainDataBuilder_.dispose();
              terrainDataBuilder_ = null;
              terrainData_ = other.terrainData_;
              bitField0_ = (bitField0_ & ~0x00000001);
              terrainDataBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getTerrainDataFieldBuilder() : null;
            } else {
              terrainDataBuilder_.addAllMessages(other.terrainData_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        DnD.Player.PlayerOuterClass.Player parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (DnD.Player.PlayerOuterClass.Player) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private float posX_ ;
      /**
       * <code>float posX = 1;</code>
       * @return The posX.
       */
      public float getPosX() {
        return posX_;
      }
      /**
       * <code>float posX = 1;</code>
       * @param value The posX to set.
       * @return This builder for chaining.
       */
      public Builder setPosX(float value) {
        
        posX_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float posX = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearPosX() {
        
        posX_ = 0F;
        onChanged();
        return this;
      }

      private float posY_ ;
      /**
       * <code>float posY = 2;</code>
       * @return The posY.
       */
      public float getPosY() {
        return posY_;
      }
      /**
       * <code>float posY = 2;</code>
       * @param value The posY to set.
       * @return This builder for chaining.
       */
      public Builder setPosY(float value) {
        
        posY_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float posY = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearPosY() {
        
        posY_ = 0F;
        onChanged();
        return this;
      }

      private int viewDistance_ ;
      /**
       * <code>int32 viewDistance = 3;</code>
       * @return The viewDistance.
       */
      public int getViewDistance() {
        return viewDistance_;
      }
      /**
       * <code>int32 viewDistance = 3;</code>
       * @param value The viewDistance to set.
       * @return This builder for chaining.
       */
      public Builder setViewDistance(int value) {
        
        viewDistance_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 viewDistance = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearViewDistance() {
        
        viewDistance_ = 0;
        onChanged();
        return this;
      }

      private float currentTerrainPosX_ ;
      /**
       * <code>float currentTerrainPosX = 4;</code>
       * @return The currentTerrainPosX.
       */
      public float getCurrentTerrainPosX() {
        return currentTerrainPosX_;
      }
      /**
       * <code>float currentTerrainPosX = 4;</code>
       * @param value The currentTerrainPosX to set.
       * @return This builder for chaining.
       */
      public Builder setCurrentTerrainPosX(float value) {
        
        currentTerrainPosX_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float currentTerrainPosX = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearCurrentTerrainPosX() {
        
        currentTerrainPosX_ = 0F;
        onChanged();
        return this;
      }

      private float currentTerrainPosY_ ;
      /**
       * <code>float currentTerrainPosY = 5;</code>
       * @return The currentTerrainPosY.
       */
      public float getCurrentTerrainPosY() {
        return currentTerrainPosY_;
      }
      /**
       * <code>float currentTerrainPosY = 5;</code>
       * @param value The currentTerrainPosY to set.
       * @return This builder for chaining.
       */
      public Builder setCurrentTerrainPosY(float value) {
        
        currentTerrainPosY_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float currentTerrainPosY = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearCurrentTerrainPosY() {
        
        currentTerrainPosY_ = 0F;
        onChanged();
        return this;
      }

      private java.util.List<DnD.Terrain.TerrainOuterClass.Terrain> terrainData_ =
        java.util.Collections.emptyList();
      private void ensureTerrainDataIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          terrainData_ = new java.util.ArrayList<DnD.Terrain.TerrainOuterClass.Terrain>(terrainData_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          DnD.Terrain.TerrainOuterClass.Terrain, DnD.Terrain.TerrainOuterClass.Terrain.Builder, DnD.Terrain.TerrainOuterClass.TerrainOrBuilder> terrainDataBuilder_;

      /**
       * <code>repeated .Dnd.Terrain.Terrain terrainData = 6;</code>
       */
      public java.util.List<DnD.Terrain.TerrainOuterClass.Terrain> getTerrainDataList() {
        if (terrainDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(terrainData_);
        } else {
          return terrainDataBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Dnd.Terrain.Terrain terrainData = 6;</code>
       */
      public int getTerrainDataCount() {
        if (terrainDataBuilder_ == null) {
          return terrainData_.size();
        } else {
          return terrainDataBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Dnd.Terrain.Terrain terrainData = 6;</code>
       */
      public DnD.Terrain.TerrainOuterClass.Terrain getTerrainData(int index) {
        if (terrainDataBuilder_ == null) {
          return terrainData_.get(index);
        } else {
          return terrainDataBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Dnd.Terrain.Terrain terrainData = 6;</code>
       */
      public Builder setTerrainData(
          int index, DnD.Terrain.TerrainOuterClass.Terrain value) {
        if (terrainDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTerrainDataIsMutable();
          terrainData_.set(index, value);
          onChanged();
        } else {
          terrainDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Dnd.Terrain.Terrain terrainData = 6;</code>
       */
      public Builder setTerrainData(
          int index, DnD.Terrain.TerrainOuterClass.Terrain.Builder builderForValue) {
        if (terrainDataBuilder_ == null) {
          ensureTerrainDataIsMutable();
          terrainData_.set(index, builderForValue.build());
          onChanged();
        } else {
          terrainDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Dnd.Terrain.Terrain terrainData = 6;</code>
       */
      public Builder addTerrainData(DnD.Terrain.TerrainOuterClass.Terrain value) {
        if (terrainDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTerrainDataIsMutable();
          terrainData_.add(value);
          onChanged();
        } else {
          terrainDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Dnd.Terrain.Terrain terrainData = 6;</code>
       */
      public Builder addTerrainData(
          int index, DnD.Terrain.TerrainOuterClass.Terrain value) {
        if (terrainDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTerrainDataIsMutable();
          terrainData_.add(index, value);
          onChanged();
        } else {
          terrainDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Dnd.Terrain.Terrain terrainData = 6;</code>
       */
      public Builder addTerrainData(
          DnD.Terrain.TerrainOuterClass.Terrain.Builder builderForValue) {
        if (terrainDataBuilder_ == null) {
          ensureTerrainDataIsMutable();
          terrainData_.add(builderForValue.build());
          onChanged();
        } else {
          terrainDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Dnd.Terrain.Terrain terrainData = 6;</code>
       */
      public Builder addTerrainData(
          int index, DnD.Terrain.TerrainOuterClass.Terrain.Builder builderForValue) {
        if (terrainDataBuilder_ == null) {
          ensureTerrainDataIsMutable();
          terrainData_.add(index, builderForValue.build());
          onChanged();
        } else {
          terrainDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Dnd.Terrain.Terrain terrainData = 6;</code>
       */
      public Builder addAllTerrainData(
          java.lang.Iterable<? extends DnD.Terrain.TerrainOuterClass.Terrain> values) {
        if (terrainDataBuilder_ == null) {
          ensureTerrainDataIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, terrainData_);
          onChanged();
        } else {
          terrainDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Dnd.Terrain.Terrain terrainData = 6;</code>
       */
      public Builder clearTerrainData() {
        if (terrainDataBuilder_ == null) {
          terrainData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          terrainDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Dnd.Terrain.Terrain terrainData = 6;</code>
       */
      public Builder removeTerrainData(int index) {
        if (terrainDataBuilder_ == null) {
          ensureTerrainDataIsMutable();
          terrainData_.remove(index);
          onChanged();
        } else {
          terrainDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Dnd.Terrain.Terrain terrainData = 6;</code>
       */
      public DnD.Terrain.TerrainOuterClass.Terrain.Builder getTerrainDataBuilder(
          int index) {
        return getTerrainDataFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Dnd.Terrain.Terrain terrainData = 6;</code>
       */
      public DnD.Terrain.TerrainOuterClass.TerrainOrBuilder getTerrainDataOrBuilder(
          int index) {
        if (terrainDataBuilder_ == null) {
          return terrainData_.get(index);  } else {
          return terrainDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Dnd.Terrain.Terrain terrainData = 6;</code>
       */
      public java.util.List<? extends DnD.Terrain.TerrainOuterClass.TerrainOrBuilder> 
           getTerrainDataOrBuilderList() {
        if (terrainDataBuilder_ != null) {
          return terrainDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(terrainData_);
        }
      }
      /**
       * <code>repeated .Dnd.Terrain.Terrain terrainData = 6;</code>
       */
      public DnD.Terrain.TerrainOuterClass.Terrain.Builder addTerrainDataBuilder() {
        return getTerrainDataFieldBuilder().addBuilder(
            DnD.Terrain.TerrainOuterClass.Terrain.getDefaultInstance());
      }
      /**
       * <code>repeated .Dnd.Terrain.Terrain terrainData = 6;</code>
       */
      public DnD.Terrain.TerrainOuterClass.Terrain.Builder addTerrainDataBuilder(
          int index) {
        return getTerrainDataFieldBuilder().addBuilder(
            index, DnD.Terrain.TerrainOuterClass.Terrain.getDefaultInstance());
      }
      /**
       * <code>repeated .Dnd.Terrain.Terrain terrainData = 6;</code>
       */
      public java.util.List<DnD.Terrain.TerrainOuterClass.Terrain.Builder> 
           getTerrainDataBuilderList() {
        return getTerrainDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          DnD.Terrain.TerrainOuterClass.Terrain, DnD.Terrain.TerrainOuterClass.Terrain.Builder, DnD.Terrain.TerrainOuterClass.TerrainOrBuilder> 
          getTerrainDataFieldBuilder() {
        if (terrainDataBuilder_ == null) {
          terrainDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              DnD.Terrain.TerrainOuterClass.Terrain, DnD.Terrain.TerrainOuterClass.Terrain.Builder, DnD.Terrain.TerrainOuterClass.TerrainOrBuilder>(
                  terrainData_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          terrainData_ = null;
        }
        return terrainDataBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:DnD.Player.Player)
    }

    // @@protoc_insertion_point(class_scope:DnD.Player.Player)
    private static final DnD.Player.PlayerOuterClass.Player DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new DnD.Player.PlayerOuterClass.Player();
    }

    public static DnD.Player.PlayerOuterClass.Player getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Player>
        PARSER = new com.google.protobuf.AbstractParser<Player>() {
      @java.lang.Override
      public Player parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Player(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Player> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Player> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public DnD.Player.PlayerOuterClass.Player getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_DnD_Player_Player_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_DnD_Player_Player_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\014Player.proto\022\nDnD.Player\032\rTerrain.prot" +
      "o\"\235\001\n\006Player\022\014\n\004posX\030\001 \001(\002\022\014\n\004posY\030\002 \001(\002" +
      "\022\024\n\014viewDistance\030\003 \001(\005\022\032\n\022currentTerrain" +
      "PosX\030\004 \001(\002\022\032\n\022currentTerrainPosY\030\005 \001(\002\022)" +
      "\n\013terrainData\030\006 \003(\0132\024.Dnd.Terrain.Terrai" +
      "nB\036\n\nDnD.PlayerB\020PlayerOuterClassb\006proto" +
      "3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          DnD.Terrain.TerrainOuterClass.getDescriptor(),
        });
    internal_static_DnD_Player_Player_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_DnD_Player_Player_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_DnD_Player_Player_descriptor,
        new java.lang.String[] { "PosX", "PosY", "ViewDistance", "CurrentTerrainPosX", "CurrentTerrainPosY", "TerrainData", });
    DnD.Terrain.TerrainOuterClass.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
