// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TileType.proto

package DnD.Terrain;

public final class TileTypeOuterClass {
  private TileTypeOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code Dnd.Terrain.TileType}
   */
  public enum TileType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>STANDARD_GRASS = 0;</code>
     */
    STANDARD_GRASS(0),
    /**
     * <code>LIGHT_PATCH_GRASS = 1;</code>
     */
    LIGHT_PATCH_GRASS(1),
    /**
     * <code>DARK_PATCH_GRASS = 2;</code>
     */
    DARK_PATCH_GRASS(2),
    /**
     * <code>STANDARD_TREE = 3;</code>
     */
    STANDARD_TREE(3),
    /**
     * <code>ROCK = 4;</code>
     */
    ROCK(4),
    /**
     * <code>GIANT_ROCK = 5;</code>
     */
    GIANT_ROCK(5),
    /**
     * <code>WATER_BODY = 6;</code>
     */
    WATER_BODY(6),
    /**
     * <code>WOODEN_CABIN = 7;</code>
     */
    WOODEN_CABIN(7),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>STANDARD_GRASS = 0;</code>
     */
    public static final int STANDARD_GRASS_VALUE = 0;
    /**
     * <code>LIGHT_PATCH_GRASS = 1;</code>
     */
    public static final int LIGHT_PATCH_GRASS_VALUE = 1;
    /**
     * <code>DARK_PATCH_GRASS = 2;</code>
     */
    public static final int DARK_PATCH_GRASS_VALUE = 2;
    /**
     * <code>STANDARD_TREE = 3;</code>
     */
    public static final int STANDARD_TREE_VALUE = 3;
    /**
     * <code>ROCK = 4;</code>
     */
    public static final int ROCK_VALUE = 4;
    /**
     * <code>GIANT_ROCK = 5;</code>
     */
    public static final int GIANT_ROCK_VALUE = 5;
    /**
     * <code>WATER_BODY = 6;</code>
     */
    public static final int WATER_BODY_VALUE = 6;
    /**
     * <code>WOODEN_CABIN = 7;</code>
     */
    public static final int WOODEN_CABIN_VALUE = 7;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TileType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static TileType forNumber(int value) {
      switch (value) {
        case 0: return STANDARD_GRASS;
        case 1: return LIGHT_PATCH_GRASS;
        case 2: return DARK_PATCH_GRASS;
        case 3: return STANDARD_TREE;
        case 4: return ROCK;
        case 5: return GIANT_ROCK;
        case 6: return WATER_BODY;
        case 7: return WOODEN_CABIN;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TileType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        TileType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TileType>() {
            public TileType findValueByNumber(int number) {
              return TileType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return DnD.Terrain.TileTypeOuterClass.getDescriptor().getEnumTypes().get(0);
    }

    private static final TileType[] VALUES = values();

    public static TileType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private TileType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Dnd.Terrain.TileType)
  }


  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\016TileType.proto\022\013Dnd.Terrain*\232\001\n\010TileTy" +
      "pe\022\022\n\016STANDARD_GRASS\020\000\022\025\n\021LIGHT_PATCH_GR" +
      "ASS\020\001\022\024\n\020DARK_PATCH_GRASS\020\002\022\021\n\rSTANDARD_" +
      "TREE\020\003\022\010\n\004ROCK\020\004\022\016\n\nGIANT_ROCK\020\005\022\016\n\nWATE" +
      "R_BODY\020\006\022\020\n\014WOODEN_CABIN\020\007B!\n\013DnD.Terrai" +
      "nB\022TileTypeOuterClassb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
